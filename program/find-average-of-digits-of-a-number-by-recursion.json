{"slug":"find-average-of-digits-of-a-number-by-recursion","title":"Find average of digits of a number by recursion","trackId":5360,"tags":["C#","JavaScript","Python","PHP"],"contributors":["anandfresh","Avicenne-b","hi-Kartik2004","harshraj8843","urielwix"],"contentHtml":"<h2>Write a program to find average of digits of a number by recursion</h2>\n<p>Average of digits of a number is the sum of digits of the number divided by the number of digits in the number. For example, the average of digits of 123 is 6. The sum of digits of 123 is 6 and the number of digits in 123 is 3. So, the average of digits of 123 is 6/3 = 2.</p>\n<pre><code>Input  : 123\r\nOutput : 2\n</code></pre>\n<hr>\n<pre><code>using System;\n \nclass AVERAGE {\n\n    static double avgRec(int[] a, int i)\n    {\n        int n = a.Length;\n        if (i == n-1)\n            return a[i];\n     \n        if (i == 0)\n            return ((a[i] + avgRec(a, i+1))/n);\n     \n        return (a[i] + avgRec(a, i+1));\n    }\n     \n \n    public static void Main ()\n    {   \n       int []arr = {1,2,3}; \n       Console.Write(avgRec(arr, 0));\n    }\n}\n</code></pre>\n<pre><code>var averageOfDigits = function (num, digitsCount, digitsSum) {\n    if (digitsCount === void 0) { digitsCount = 0; }\n    if (digitsSum === void 0) { digitsSum = 0; }\n    if (num &#x3C; 10) {\n        digitsCount++;\n        digitsSum += num;\n        return digitsSum / digitsCount;\n    }\n    else {\n        var digit = num % 10;\n        digitsCount++;\n        digitsSum += digit;\n        num = Math.floor(num / 10);\n        return averageOfDigits(num, digitsCount, digitsSum);\n    }\n};\nconsole.log(averageOfDigits(455));\n</code></pre>\n<pre><code>def average_of_digits(n):\n    if n == 0:\n        return 0\n    digits = [int(d) for d in str(n)]\n    return sum(digits) / len(digits)\n\nprint(average_of_digits(123))\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction averageRecursion($a, $i=0)\n{\n    if(!is_array($a)) $a = str_split($a);\n    \n    $n = sizeof($a);\n    \n    if ($i == $n - 1) return $a[$i];\n\n    if ($i == 0) return (($a[$i] + averageRecursion($a, $i + 1)) / $n);\n \n    return ($a[$i] + averageRecursion($a, $i + 1));\n}\n\n$num = 123;\necho averageRecursion($num);\n \n \n?>\n</code></pre>\n","markdown":"\n## Write a program to find average of digits of a number by recursion\n\nAverage of digits of a number is the sum of digits of the number divided by the number of digits in the number. For example, the average of digits of 123 is 6. The sum of digits of 123 is 6 and the number of digits in 123 is 3. So, the average of digits of 123 is 6/3 = 2.\r\n\r\n```\r\nInput  : 123\r\nOutput : 2\r\n```\n\n---\n\n<CodeBlock slug=\"find-average-of-digits-of-a-number-by-recursion\" >\n\n```cs\nusing System;\n \nclass AVERAGE {\n\n    static double avgRec(int[] a, int i)\n    {\n        int n = a.Length;\n        if (i == n-1)\n            return a[i];\n     \n        if (i == 0)\n            return ((a[i] + avgRec(a, i+1))/n);\n     \n        return (a[i] + avgRec(a, i+1));\n    }\n     \n \n    public static void Main ()\n    {   \n       int []arr = {1,2,3}; \n       Console.Write(avgRec(arr, 0));\n    }\n}\n```\n\n```js\nvar averageOfDigits = function (num, digitsCount, digitsSum) {\n    if (digitsCount === void 0) { digitsCount = 0; }\n    if (digitsSum === void 0) { digitsSum = 0; }\n    if (num < 10) {\n        digitsCount++;\n        digitsSum += num;\n        return digitsSum / digitsCount;\n    }\n    else {\n        var digit = num % 10;\n        digitsCount++;\n        digitsSum += digit;\n        num = Math.floor(num / 10);\n        return averageOfDigits(num, digitsCount, digitsSum);\n    }\n};\nconsole.log(averageOfDigits(455));\n```\n\n```py\ndef average_of_digits(n):\n    if n == 0:\n        return 0\n    digits = [int(d) for d in str(n)]\n    return sum(digits) / len(digits)\n\nprint(average_of_digits(123))\n```\n\n```php\n<?php\n\nfunction averageRecursion($a, $i=0)\n{\n    if(!is_array($a)) $a = str_split($a);\n    \n    $n = sizeof($a);\n    \n    if ($i == $n - 1) return $a[$i];\n\n    if ($i == 0) return (($a[$i] + averageRecursion($a, $i + 1)) / $n);\n \n    return ($a[$i] + averageRecursion($a, $i + 1));\n}\n\n$num = 123;\necho averageRecursion($num);\n \n \n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-01-13T04:10:18Z"}